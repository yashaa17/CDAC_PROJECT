package com.bookmydriver.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;

@EnableWebSecurity
@Configuration
public class SecurityConfig {


	 private final JwtFilter jwtAuthenticationFilter;


	public SecurityConfig(JwtFilter jwtAuthenticationFilter) {
		// TODO Auto-generated constructor stub
//		this.userRepository = userRepository;
		this.jwtAuthenticationFilter = jwtAuthenticationFilter;
//		this.userDetails = userDetails;
	}


	@Autowired
	private AuthenticationProvider authenticationProvider;

	@Bean
	SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception {


		httpSecurity.cors().disable()
		.csrf().disable()
		.authorizeHttpRequests()
		.antMatchers("/auth/**","/swagger-ui/**","/v*/api-doc*//").permitAll()
		.anyRequest()
		.authenticated()
		.and()
		.authenticationProvider(authenticationProvider)
		.addFilterBefore(jwtAuthenticationFilter, BasicAuthenticationFilter.class);

		return httpSecurity.build();

	}



}
